<style lang="less">
.c-btn {
  background-color: #54bcc7;
  color: white;
}
</style>
<template>
    <view class="page">
        <view class="page__bd">
            <form bindsubmit="formSubmit">
                <view class="weui-cells__title">吐槽</view>
                <view class="weui-cells weui-cells_after-title">
                    <view class="weui-cell">
                        <view class="weui-cell__bd">
                            <textarea bindinput="bindKeyInput" class="weui-textarea" focus placeholder="就没有一点想说的么？" name="content" style="height: 3.3em" value="{{content}}" />
                        </view>
                    </view>
                </view>
                <view class="weui-btn-area">
                    <button class="weui-btn c-btn" formType="submit">确定</button>
                    <text wx:if="{{errorMsg}}" style="font-size:14px;color:#54bcc7">{{errorMsg}}</text>
                </view>
            </form>
        </view>
    </view>
    <toast />
</template>
<script>
import wepy from "wepy";
import Toast from "wepy-com-toast";
import tucaoApi from "../api/tucao";
import loginApi from "../api/login";
export default class Create extends wepy.page {
  config = {
    navigationBarTitleText: "吐槽一下"
  };
  components = {
    toast: Toast
  };
  data = {
    loginUser: null,
    content: "",
    errorMsg: ""
  };
  methods = {
    bindKeyInput: function(e) {
      this.content = e.detail.value;
      this.$apply();
    },
    formSubmit(e) {
      var self = this;
      var content = self.content;
      if (self.loginUser == null) {
        this.showMsg("请授权！！！");
        this.$apply();
        return;
      }
      if (!content) {
        this.showMsg("请填写内容啊");
        return;
      }
      tucaoApi
        .create(
          this.loginUser.token,
          this.loginUser.nickName,
          this.loginUser.avatarUrl,
          content
        )
        .then(resp => {
          if (resp.status == 1) {
            self.showMsg(resp.msg, "success");
            self.content = "";
            self.$apply();
          } else {
            self.showMsg(resp.msg, "warn");
          }
        })
        .catch(resp => {
          self.showMsg(resp.errMsg, "warn");
        });
    }
  };
  showMsg(content, type = "warn") {
    this.$invoke("toast", "show", {
      title: content,
      img: "../assets/images/" + type + ".png"
    });
  }
  onLoad() {
    let self = this;
    loginApi.getFullInfo(e => {
      if (e == null) {
        self.errorMsg = "未授权无权吐槽,重新添加小程序即可再次授权";
      }
      self.loginUser = e;
      self.$apply();
    });
  }
}
</script>
